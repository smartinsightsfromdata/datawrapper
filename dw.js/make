#!/bin/bash
# read version from package.json
CUR_DIR="$( pwd )"
SCRIPT_DIR="$( dirname "${BASH_SOURCE[0]}" )"
cd $SCRIPT_DIR

VERSION=$(python -c 'import json;print json.loads(open("../package.json").read())["version"]')

# remove old javascript
rm ../www/static/js/dw-2.0.js
rm ../www/static/js/dw-2.0.min.js

# generate js that's packed with each chart
cat src/dw.start.js src/dw.dataset.js src/dw.column.js src/dw.column.types.js src/dw.datasource.js src/dw.datasource.delimited.js src/dw.utils.js src/dw.utils.filter.js src/dw.chart.js src/dw.visualization.js src/dw.visualization.base.js src/dw.theme.js src/dw.theme.base.js src/dw.end.js > dw-2.0.js
cp dw-2.0.js ../www/static/js/

# check if uglifyjs is available as local command
if [ -n "$(command -v uglifyjss)" ]
then
	uglifyjs -o ../www/static/js/dw-2.0.min.js dw-2.0.js
else
	# use jsmin.php as fallback
	php -r "require '../vendor/jsmin/jsmin.php'; file_put_contents('../www/static/js/dw-2.0.min.js', JSMin::minify(file_get_contents('dw-2.0.js')));"
fi
cd $CUR_DIR

